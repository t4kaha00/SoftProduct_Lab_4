Bad Boy@HellsGate MINGW64 ~ (master)
$ cd d:

Bad Boy@HellsGate MINGW64 /d
$ cd Documents/

Bad Boy@HellsGate MINGW64 /d/Documents
$ cd software\ production/

Bad Boy@HellsGate MINGW64 /d/Documents/software production
$ cd Lab\ 4/

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git merge b1
error: merge is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm <file>'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")

Unmerged paths:
  (use "git add <file>..." to mark resolution)

        both modified:   ShorCat.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .ShorCat.txt.swp
        ShorCat_BACKUP_2760.txt
        ShorCat_BASE_2760.txt
        ShorCat_LOCAL_2760.txt
        ShorCat_REMOTE_2760.txt

no changes added to commit (use "git add" and/or "git commit -a")

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git mergetool

This message is displayed because 'merge.tool' is not configured.
See 'git mergetool --tool-help' or 'git help config' for more details.
'git mergetool' will now attempt to use one of the following tools:
tortoisemerge emerge vimdiff
Merging:
ShorCat.txt

Normal merge conflict for 'ShorCat.txt':
  {local}: modified file
  {remote}: modified file
Hit return to start merge resolution tool (vimdiff):

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git opendiff
git: 'opendiff' is not a git command. See 'git --help'.

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git chose opendiff
git: 'chose' is not a git command. See 'git --help'.

Did you mean this?
        clone

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git status
On branch master
You have unmerged paths.
  (fix conflicts and run "git commit")

Unmerged paths:
  (use "git add <file>..." to mark resolution)

        both modified:   ShorCat.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .ShorCat.txt.swp
        ShorCat_BACKUP_2760.txt
        ShorCat_BACKUP_5224.txt
        ShorCat_BASE_2760.txt
        ShorCat_BASE_5224.txt
        ShorCat_LOCAL_2760.txt
        ShorCat_LOCAL_5224.txt
        ShorCat_REMOTE_2760.txt
        ShorCat_REMOTE_5224.txt

no changes added to commit (use "git add" and/or "git commit -a")

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git add ShorCat.txt

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master|MERGING)
$ git commit -m "added"
[master 5043807] added

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .ShorCat.txt.swp
        ShorCat_BACKUP_2760.txt
        ShorCat_BACKUP_5224.txt
        ShorCat_BASE_2760.txt
        ShorCat_BASE_5224.txt
        ShorCat_LOCAL_2760.txt
        ShorCat_LOCAL_5224.txt
        ShorCat_REMOTE_2760.txt
        ShorCat_REMOTE_5224.txt

nothing added to commit but untracked files present (use "git add" to track)

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git add ShorCat.txt

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git commit -m "added again"
On branch master
Untracked files:
        .ShorCat.txt.swp
        ShorCat_BACKUP_2760.txt
        ShorCat_BACKUP_5224.txt
        ShorCat_BASE_2760.txt
        ShorCat_BASE_5224.txt
        ShorCat_LOCAL_2760.txt
        ShorCat_LOCAL_5224.txt
        ShorCat_REMOTE_2760.txt
        ShorCat_REMOTE_5224.txt

nothing added to commit but untracked files present

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git -d b1
Unknown option: -d
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git branch -d b1
Deleted branch b1 (was 548833e).

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git push origin master
Enter passphrase for key '/c/Users/user/.ssh/id_rsa':
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 323 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
To git@github.com:t4kaha00/SoftProduct_Lab_4.git
   b8633d1..5043807  master -> master

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$ git branch
* master

Bad Boy@HellsGate MINGW64 /d/Documents/software production/Lab 4 (master)
$
